#include <DHTesp.h>

#define DHTPIN 4     // GPIO4 (D2 на WeMos/NodeMCU)
#define DHTTYPE DHTesp::DHT11

DHTesp dht;
unsigned long lastReadTime = 0;
const unsigned long READ_INTERVAL = 3000; // Интервал 3 секунды

void setup() {
  Serial.begin(115200);
  while (!Serial); // Ожидание готовности Serial (для некоторых плат)
  
  Serial.println("\nИнициализация DHT11...");
  
  dht.setup(DHTPIN, DHTTYPE);
  
  // Увеличиваем время ожидания для стабильной работы
  dht.getMinimumSamplingPeriod(); // Получаем минимальный интервал опроса
  Serial.print("Минимальный интервал опроса: ");
  Serial.print(dht.getMinimumSamplingPeriod());
  Serial.println(" мс");
  
  Serial.println("DHT11 готов к работе");
}

void loop() {
  unsigned long currentMillis = millis();
  
  // Проверяем, прошёл ли нужный интервал
  if (currentMillis - lastReadTime >= READ_INTERVAL) {
    lastReadTime = currentMillis;
    
    // Читаем данные с датчика
    TempAndHumidity data = dht.getTempAndHumidity();
    
    // Улучшенная проверка на ошибки
    if (isnan(data.temperature) || isnan(data.humidity)) {
      Serial.println("Ошибка чтения с DHT11! Проверьте подключение.");
      
      // Дополнительная диагностика
      Serial.print("Статус датчика: ");
      Serial.println(dht.getStatusString());
      
      // Попытка повторной инициализации
      dht.setup(DHTPIN, DHTTYPE);
      return;
    }
    
    // Выводим данные только если они корректны
    Serial.print("Температура: ");
    Serial.print(data.temperature, 1); // 1 знак после запятой
    Serial.println(" °C");
    
    Serial.print("Влажность: ");
    Serial.print(data.humidity, 1);    // 1 знак после запятой
    Serial.println(" %");
    
    // Разделитель для удобства чтения
    Serial.println("-------------------");
  }
}